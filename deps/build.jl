using BinaryProvider

# This is where all binaries will get installed
const prefix = Prefix(!isempty(ARGS) ? ARGS[1] : joinpath(@__DIR__,"usr"))

# Instantiate products here.  Examples:
clipper_lib = LibraryProduct(prefix, "cclipper")

# Assign products to `products`:
products = [clipper_lib]


# Download binaries from hosted location
bin_prefix = "https://github.com/SimonDanisch/ClipperBuilder/raw/v0.1.0/products"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    BinaryProvider.Linux(:aarch64, :glibc) => ("$bin_prefix/Clipper.aarch64-linux-gnu.tar.gz", "d1247e882a03ab96e6c34f2119ed1f4b513e25d30b3605feab38f61360353272"),
    BinaryProvider.Linux(:armv7l, :glibc) => ("$bin_prefix/Clipper.arm-linux-gnueabihf.tar.gz", "6d9912c43e02a51f727192724d08b590c8b0033bb29494e6e47a779f4be522d1"),
    BinaryProvider.Linux(:i686, :glibc) => ("$bin_prefix/Clipper.i686-linux-gnu.tar.gz", "0ef8480ecec02c2fb8aebd50f5cdc578d33da09f7f608ddf3430b4adc4ce60d0"),
    BinaryProvider.Windows(:i686) => ("$bin_prefix/Clipper.i686-w64-mingw32.tar.gz", "90df03f09ecbec00840e2f9c67a71996c37968b2ac482e6d8c58649ee4ef69a7"),
    BinaryProvider.Linux(:powerpc64le, :glibc) => ("$bin_prefix/Clipper.powerpc64le-linux-gnu.tar.gz", "bc064758985bc4fda32f4c1edd5c11d64db803176d5d6bddfb74aa8fd03663e2"),
    BinaryProvider.MacOS() => ("$bin_prefix/Clipper.x86_64-apple-darwin14.tar.gz", "ef7284520db5aa10a15fc0c0f45c6a61a3b1e1e050c736d9505e7b6fe5ed48bc"),
    BinaryProvider.Linux(:x86_64, :glibc) => ("$bin_prefix/Clipper.x86_64-linux-gnu.tar.gz", "46d5646b9dc6bffe677fec5482d09988a8919538cb4f00da1a38e359d3ea8e6c"),
    BinaryProvider.Windows(:x86_64) => ("$bin_prefix/Clipper.x86_64-w64-mingw32.tar.gz", "f74c707b2aea78424e7b4cdc28adec59770cde864d7eacde6c252a693cc7e63d"),
)
if platform_key() in keys(download_info)
    # First, check to see if we're all satisfied
    if any(!satisfied(p; verbose=true) for p in products)
        # Download and install binaries
        url, tarball_hash = download_info[platform_key()]
        install(url, tarball_hash; prefix=prefix, force=true, verbose=true)
    end

    @write_deps_file clipper_lib
else
    error("Your platform $(Sys.MACHINE) is not supported by this package!")
end
